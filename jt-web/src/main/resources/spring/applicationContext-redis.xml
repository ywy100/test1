<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
	
	
	<!-- 为了对象与json转化方便,创建objectMapper对象 -->
	<bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>
	<!-- spring整合redis/哨兵操作 -->
	<!--  <bean id="jedis" class="redis.clients.jedis.Jedis">
	<constructor-arg name="host" value="${redis.host}"/>
	<constructor-arg name="port" value="${redis.port}"/>
	</bean>-->
	<!-- 
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
	<property name="maxTotal" value="${redis.MaxTotal}"/>
	</bean> -->
	<!-- <bean id="infoa" class="redis.clients.jedis.JedisShardInfo">
	<constructor-arg name="host" value="${redis.host}"/>
	<constructor-arg name="port" value="${redis.porta}"/>
	</bean>
	<bean id="infob" class="redis.clients.jedis.JedisShardInfo">
	<constructor-arg name="host" value="${redis.host}"/>
	<constructor-arg name="port" value="${redis.portb}"/>
	</bean>
	<bean id="infoc" class="redis.clients.jedis.JedisShardInfo">
	<constructor-arg name="host" value="${redis.host}"/>
	<constructor-arg name="port" value="${redis.portc}"/>
	</bean>
	
	实例化连接池对象
	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
	<constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
	<constructor-arg name="shards">
	<list>
				<ref bean="infoa"/>
				<ref bean="infob"/>
				<ref bean="infoc"/>
			</list>
	
	</constructor-arg>
	</bean> -->
	
	
	<!-- <bean id="sentinelPool" class="redis.clients.jedis.JedisSentinelPool">
		<constructor-arg name="masterName" value="${redis.sentinel.masterName}"/>
		<constructor-arg name="sentinels">
			<set>
				<value>${redis.sentinel}</value>
			</set>
		</constructor-arg>
		<constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
	</bean> -->
	
	
	 <!-- jedis 配置-->  
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" >  
        <!--最大空闲数-->  
        <property name="maxIdle" value="${redis.maxIdle}" />  
        <!--最大建立连接等待时间-->  
        <property name="maxWaitMillis" value="${redis.maxWait}" />  
        <!--是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个-->  
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
        <property name="maxTotal" value="${redis.maxTotal}" />  
        <property name="minIdle" value="${redis.minIdle}" />  
    </bean>
    
    <!-- 定义jedisCluster工厂模式对象 -->
    <bean id="jedisCluster" class="com.jt.common.factory.JedisClusterFactory">
    <property name="redisNodes" value="classpath:/properties/redis.properties"></property>
    </bean>
	
	
</beans>